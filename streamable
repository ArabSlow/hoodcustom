--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v75=v2(v0(v20,16));if v19 then local v78=0;local v79;while true do if (1==v78) then return v79;end if (v78==0) then v79=v5(v75,v19);v19=nil;v78=1;end end else return v75;end end end);local function v21(v22,v23,v24)if v24 then local v76=(v22/((579 -(117 + 250 + 210))^(v23-(1 + 0))))%((4 -(1410 -(5 + 1403)))^(((v24-(1 -0)) -(v23-(756 -(320 + 435)))) + (1354 -(639 + 714)))) ;return v76-(v76%((2148 -1365) -(165 + 617))) ;else local v77=(103 -(80 + 21))^(v23-(1 + 0)) ;return (((v22%(v77 + v77))>=v77) and (898 -((1908 -(1453 + 387)) + 829))) or (0 -0) ;end end local function v25()local v38=87 -((51 -19) + 55) ;local v39;while true do if (v38==(1 + 0)) then return v39;end if ((0 -0)==v38) then v39=v1(v16,v18,v18);v18=v18 + 1 ;v38=665 -(417 + 75 + 172) ;end end end local function v26()local v40,v41=v1(v16,v18,v18 + (2 -0) );v18=v18 + (6 -4) ;return (v41 * (482 -226)) + v40 ;end local function v27()local v42=1496 -(1412 + 84) ;local v43;local v44;local v45;local v46;while true do if (v42==1) then return (v46 * (9868113 + 6909103)) + (v45 * (66069 -(242 + 291))) + (v44 * (516 -260)) + v43 ;end if (v42==(0 + 0 + 0)) then v43,v44,v45,v46=v1(v16,v18,v18 + 3 + 0 );v18=v18 + 4 + (0 -0) ;v42=2 -1 ;end end end local function v28()local v47=0;local v48;local v49;local v50;local v51;local v52;local v53;while true do if ((21 -(19 + 2))==v47) then v48=v27();v49=v27();v47=(2 + 0) -1 ;end if (v47==(8 -(2 + 3))) then if (v52==((2060 -(342 + 666)) -(743 + 309))) then if (v51==(0 + 0)) then return v53 * (0 + 0) ;else v52=2 -(1 + 0) ;v50=0 -0 ;end elseif (v52==2047) then return ((v51==(0 -0)) and (v53 * (1/(0 + 0 + 0)))) or (v53 * NaN) ;end return v8(v53,v52-1023 ) * (v50 + (v51/((5 -3)^(141 -89)))) ;end if (v47==1) then v50=1;v51=(v21(v49,1 + 0 ,78 -(109 -51) ) * ((1 + 1)^(11 + 21))) + v48 ;v47=(362 + 205) -(367 + 161 + 37) ;end if (v47==((2229 -(617 + 325)) -((1235 -(664 + 225)) + 939))) then v52=v21(v49,21,2016 -(13 + 1972) );v53=((v21(v49,11 + 21 )==(2 -1)) and  -(1 + 0)) or (497 -(429 + 67)) ;v47=1082 -(456 + 623) ;end end end local function v29(v30)local v54;if  not v30 then v30=v27();if (v30==(0 + 0)) then return "";end end v54=v3(v16,v18,(v18 + v30) -(970 -(725 + 244)) );v18=v18 + v30 ;local v55={};for v66=1 + 0 , #v54 do v55[v66]=v2(v1(v3(v54,v66,v66)));end return v6(v55);end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v56=0 -0 ;local v57;local v58;local v59;local v60;local v61;local v62;while true do local v68=0;while true do if (v68~=1) then else if (v56~=(0 + 0)) then else local v90=0;local v91;while true do if (v90~=0) then else v91=0 -0 ;while true do if (v91~=(0 + 0)) then else local v115=0;while true do if ((1 + 0)==v115) then v91=1 + 0 ;break;end if (v115==(0 + 0)) then v57={};v58={};v115=1178 -(1122 + 55) ;end end end if (v91==(1 + 1)) then v56=1;break;end if ((1 + 0)==v91) then v59={};v60={v57,v58,nil,v59};v91=2;end end break;end end end break;end if (v68==0) then if (v56~=(2 + 0)) then else local v92=0 -0 ;while true do if (v92==(1 + 0)) then for v106=1,v27() do v59[v106]=v27();end return v60;end if (v92==(0 + 0)) then for v108=1,v27() do local v109=0;local v110;local v111;while true do if (v109==0) then local v118=0;while true do if ((0 + 0)==v118) then v110=0;v111=nil;v118=2 -1 ;end if (v118~=1) then else v109=1 + 0 ;break;end end end if (v109==(1 + 0)) then while true do if (0~=v110) then else v111=v25();if (v21(v111,1 + 0 ,307 -(17 + 289) )~=(0 + 0)) then else local v119=0;local v120;local v121;local v122;local v123;while true do if (v119==0) then v120=0 + 0 ;v121=nil;v119=1 -0 ;end if (v119~=(4 -2)) then else while true do if (1~=v120) then else v123={v26(),v26(),nil,nil};if (v121==(0 + 0)) then local v301=1393 -(877 + 516) ;local v302;while true do if (v301==0) then v302=0 + 0 ;while true do if ((0 + 0)==v302) then v123[1 + 2 ]=v26();v123[4 + 0 ]=v26();break;end end break;end end elseif (v121==1) then v123[1528 -(158 + 1367) ]=v27();elseif (v121==(1274 -(825 + 447))) then v123[189 -(11 + 175) ]=v27() -((8 -6)^(73 -57)) ;elseif (v121==(1 + 2)) then local v418=0;local v419;local v420;while true do if (v418==0) then v419=0;v420=nil;v418=1;end if (1~=v418) then else while true do if (v419==(0 -0)) then v420=714 -(415 + 299) ;while true do if (v420==(0 -0)) then v123[3]=v27() -((2 + 0)^16) ;v123[4]=v26();break;end end break;end end break;end end end v120=2;end if (v120==0) then v121=v21(v111,2 + 0 ,2 + 1 );v122=v21(v111,1 + 3 ,6);v120=1;end if (v120==(3 + 0)) then if (v21(v122,8 -5 ,3)~=1) then else v123[4]=v62[v123[1967 -(1438 + 525) ]];end v57[v108]=v123;break;end if (v120~=(1405 -(908 + 495))) then else local v282=0 -0 ;while true do if (v282==(708 -(623 + 85))) then if (v21(v122,1 + 0 ,1)==(2 -1)) then v123[1802 -(1374 + 426) ]=v62[v123[5 -3 ]];end if (v21(v122,2 + 0 ,565 -(5 + 558) )~=(1 + 0)) then else v123[3]=v62[v123[1 + 2 ]];end v282=1;end if (v282==(1 + 0)) then v120=3;break;end end end end break;end if (v119==(1 -0)) then v122=nil;v123=nil;v119=2;end end end break;end end break;end end end for v112=1,v27() do v58[v112-(129 -(109 + 19)) ]=v33();end v92=1;end end end if (v56==1) then v61=v27();v62={};for v97=1481 -(911 + 569) ,v61 do local v98=0 + 0 ;local v99;local v100;while true do if (v98~=0) then else v99=v25();v100=nil;v98=1;end if (v98==(2 -1)) then if (v99==(125 -(57 + 67))) then v100=v25()~=(1590 -(422 + 1168)) ;elseif (v99==(3 -1)) then v100=v28();elseif (v99~=3) then else v100=v29();end v62[v97]=v100;break;end end end v60[3]=v25();v56=2;end v68=1;end end end end local function v34(v35,v36,v37)local v63=v35[1];local v64=v35[2];local v65=v35[3];return function(...)local v69=0;local v70;local v71;local v72;local v73;local v74;while true do if (v69==0) then v70=1;v71= -1;v69=1;end if (3==v69) then A,B=v32(v11(v74));if  not A[1] then local v94=v35[4][v70] or "?" ;error("Script error at ["   .. v94   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v69==2) then v74=nil;v74=function()local v80=v63;local v81=v64;local v82=v65;local v83=v32;local v84={};local v85={};local v86={};for v95=0,v73 do if ((v95>=v82) or ((782 + 85)==(16398 -11884))) then v84[v95-v82 ]=v72[v95 + 1 + 0 ];else v86[v95]=v72[v95 + (723 -(584 + 138)) ];end end local v87=(v73-v82) + (1 -0) ;local v88;local v89;while true do local v96=0 -0 ;while true do if ((v96==(820 -(654 + (260 -95)))) or (2915>(6038 -2996))) then if (((905 -(7 + 1 + 124))==(566 + 207)) and (v89<=(92 -60))) then if ((v89<=(1960 -(430 + 1515))) or ((1305 + 2797)<(71 + 6))) then if ((v89<=7) or ((74 + 14)>=(9240 -5655))) then if ((v89<=(3 -0)) or ((5494 -(899 + 63 + 376))<=(1 + 951))) then if ((v89<=((2 -1) + 0)) or ((5272 -(57 + 58 + 253 + 40))==(629 + 1620))) then if (((2814 -(1730 + 133))<((8772 + 170) -3960)) and (v89==(1857 -(871 + 986)))) then v86[v88[2]]=v86[v88[924 -(652 + 269) ]][v88[473 -(259 + 210) ]];else local v126=(235 -153) -(53 + 29) ;local v127;local v128;local v129;local v130;while true do if (((1616 + 195)>=996) and (v126==1)) then local v283=0 + 0 ;while true do if (((2482 -714)==(609 + 1159)) and (v283==1)) then v126=374 -(171 + 201) ;break;end if ((0==v283) or ((8598 -5923)<(1552 -(113 + 314)))) then v129=nil;v130=nil;v283=4 -3 ;end end end if (((602 + 3554)>(49 + 788)) and (v126==(0 -0))) then v127=0;v128=nil;v126=1;end if (((13622 -9702)<=(10104 -5612)) and (v126==(1 + 1))) then while true do if (((692 + 4183)>(1739 -(1162 + 377))) and (v127==(1987 -(697 + 1290)))) then local v313=0 + 0 ;local v314;while true do if ((v313==(1964 -((2237 -536) + 263))) or ((2840 -(174 + 278))==(6172 -(894 + 667)))) then v314=0 + 0 ;while true do if (((0 -0)==v314) or ((3178 + 633)<((5302 + 2396) -(2242 + 1770)))) then local v421=0;while true do if ((v421==(1992 -(655 + 1336))) or ((414 + 993)>=(13229 -8605))) then v314=1979 -(291 + 1687) ;break;end if ((4683>=2213) and (v421==(329 -(49 + 280)))) then v128=v88[1 + 1 ];v129={v86[v128](v86[v128 + (524 -(506 + 17)) ])};v421=1;end end end if ((((1619 -1041) -(99 + 42))<(10809 -8022)) and (v314==(1619 -(1228 + 390)))) then v127=1;break;end end break;end end end if ((3773>=(13293 -(10762 -(480 + 401)))) and (v127==(4 -3))) then v130=0;for v353=v128,v88[4 + 0 ] do local v354=616 -(315 + 301) ;local v355;while true do if ((v354==0) or ((6564 -4505)>=(3796 + 28))) then v355=0 -0 ;while true do if ((v355==(0 + 0)) or ((2825 + 796)==(3776 -(31 + 10)))) then v130=v130 + (1173 -(858 + 314)) ;v86[v353]=v129[v130];break;end end break;end end end break;end end break;end end end elseif (((1130 -(217 + 301))<(3231 -(48 + 38 + 858))) and (v89>(1243 -(258 + 983)))) then v70=v88[2 + 1 ];else v36[v88[9 -6 ]]=v86[v88[1240 -(1052 + 186) ]];end elseif (((3635 -(171 + 444))>=2135) and (v89<=((770 -279) -(306 + 180)))) then if ((v89>4) or (326>=3109)) then local v134=0 -(1235 -(594 + 641)) ;local v135;local v136;while true do if ((v134==(3 -2)) or ((7426 -4348)==(101 + 3390))) then while true do if ((v135==(0 + 0)) or ((3709 -(1424 + 23))==(3385 -(59 + (3049 -(1474 + 232)))))) then v136=v88[2];v86[v136]=v86[v136]();break;end end break;end if (((9 + 13 + 4097)>(5761 -2951)) and (v134==(0 -0))) then v135=0 -0 ;v136=nil;v134=1 + 0 ;end end else v86[v88[87 -(51 + 34) ]][v88[3]]=v86[v88[4 + 0 ]];end elseif ((v89>(17 -(21 -10))) or ((229 + 3404)<=(3511 -(123 + 1216)))) then if ((3768>=(4892 -2071)) and (v86[v88[2]]<=v88[783 -(706 + 73) ])) then v70=v70 + 1 ;else v70=v88[2 + 1 ];end else local v139=1225 -(40 + 213 + 972) ;local v140;local v141;local v142;local v143;while true do if ((v139==(7 -5)) or ((5536 -(709 + 637))<3564)) then while true do if ((v140==0) or (3375>(4875 -(285 + 596)))) then local v317=0;while true do if (((1962 -(631 + 367))==(1547 -583)) and (v317==(176 -((311 -199) + 63)))) then v140=(3993 -3178) -(178 + 636) ;break;end if ((v317==0) or ((6564 -2467)<(1 + 1 + 0))) then v141=0;v142=nil;v317=197 -(147 + (85 -36)) ;end end end if ((v140==((969 -(137 + 830)) -1)) or ((18564 -13699)<((4420 -(1129 + 329)) -(636 + 227)))) then v143=nil;while true do if ((v141==0) or (588>1934)) then local v382=0 + 0 ;while true do if ((2127<(8143 -5330)) and (v382==(1 + 0))) then v141=1 + 0 ;break;end if (((5106 -2701)<(665 + 3863)) and (v382==(0 -0))) then v142=v88[1 + 1 ];v143=v86[v142];v382=614 -(386 + 69 + 158) ;end end end if ((v141==(1770 -(1264 + 221 + 284))) or ((2548 -(787 + 413))<=(1249 -512))) then for v403=v142 + 1 + 0 ,v88[2 + 1 + 0 ] do v7(v143,v86[v403]);end break;end end break;end end break;end if ((v139==(1 -0)) or ((12191 -7847)<3279)) then v142=nil;v143=nil;v139=1 + 1 ;end if ((v139==(0 + 0)) or (2626<=(55 + (286 -228)))) then v140=0 + 0 + 0 ;v141=nil;v139=1 -0 ;end end end elseif ((v89<=((1584 -(625 + 943)) -5)) or (654>=4990)) then if ((v89<=9) or (1944>=((657 -(147 + 53)) + 4227))) then if ((v89==(3 + 5)) or ((2008 -1458)>=4178)) then v86[v88[2]]();else v86[v88[488 -(300 + 113 + (2059 -(824 + 1162))) ]]={};end elseif ((v89==(7 + 3)) or ((348 -223)==(11589 -8992))) then do return;end elseif (v86[v88[111 -(82 + 27) ]] or ((3562 -1671)<(47 + 144))) then v70=v70 + 1 ;else v70=v88[1 + 2 ];end elseif ((v89<=(35 -22)) or ((730 + 1762)<(3409 -2092))) then if (((2427 -(1351 + 164))<(2467 -(91 + 1225))) and (v89==(27 -15))) then v86[v88[2]]=v86[v88[10 -7 ]]/v86[v88[3 + 1 ]] ;else v86[v88[2]]=v36[v88[621 -(126 + 492) ]];end elseif ((v89>(5 + 9)) or ((193 + 159 + 375)<(2078 -(1373 + 473)))) then local v148=0 + 0 ;local v149;local v150;while true do if (((8047 -4853)>=(3642 -(326 + 627))) and (v148==1)) then while true do if ((v149==(0 -0)) or ((837 + 911)==(2324 -976))) then v150=v88[2 + 0 ];v86[v150](v86[v150 + 1 + 0 ]);break;end end break;end if ((3669==3669) and (v148==0)) then v149=0;v150=nil;v148=1;end end else v86[v88[1 + 1 ]]=v86[v88[1870 -(332 + 1535) ]] -v88[14 -10 ] ;end elseif ((v89<=(1268 -(403 + 842))) or ((5078 -(637 + 1240))>(2129 + 2039))) then if (((2879 -914)>(146 + 136)) and (v89<=(33 -14))) then if ((v89<=(1 + 16)) or ((5755 -(598 + 1025))<=(1407 + 2103))) then if (((2642 -933)<=(5413 -(1288 + 118))) and (v89>((366 -(112 + 253)) + 15))) then if ((v86[v88[1 + 1 + 0 ]]==v88[4]) or ((929 -565)>=(10836 -6929))) then v70=v70 + (1343 -(40 + 21 + 1281)) ;else v70=v88[1 + 2 ];end else local v152=(0 -0) -0 ;local v153;while true do if ((v152==(0 -0)) or ((1705 + 487)<=(137 + (128 -(19 + 48))))) then v153=v86[v88[13 -(714 -(406 + 299)) ]];if ((3067>=2946) and  not v153) then v70=v70 + (1120 -(710 + 409)) ;else local v305=0 + 0 + 0 ;while true do if (((3825 -2963)<(3871 -(3903 -1720))) and (v305==(0 -0))) then v86[v88[1447 -(313 + (2885 -1753)) ]]=v153;v70=v88[3 + 0 ];break;end end end break;end end end elseif (((1544 -(40 + 29))==(2220 -745)) and (v89>(609 -((1315 -(228 + 939)) + 443)))) then local v154=(2894 -1532) -(1176 + 186) ;local v155;local v156;local v157;while true do if (((2270 -((1596 -1061) + 1147))<(3416 -(315 + 273))) and (v154==(3 -2))) then v157=nil;while true do if ((v155==(0 -0)) or ((10054 -7394)<1302)) then local v319=0 -(0 + 0) ;while true do if ((v319==0) or ((4963 -1283)>((5949 + 400) -(645 + 777)))) then local v383=0 -0 ;while true do if (((0 -0)==v383) or ((1173 + 1896)>=(1890 + 1501))) then v156=v88[(4726 -3444) -(716 + 564) ];v157=v86[v88[14 -11 ]];v383=1 + 0 ;end if (((10269 -6986)>744) and (v383==(1290 -(333 + 956)))) then v319=1 + 0 ;break;end end end if (((471 + 3953)<4828) and (v319==(3 -2))) then v155=1 + 0 ;break;end end end if (((5503 -(1179 + 524))>(3291 -(470 + 117 + 1083))) and (v155==(2 -1))) then v86[v156 + 1 + 0 ]=v157;v86[v156]=v157[v88[18 -14 ]];break;end end break;end if (((566 + 910 + 1111)>(1876 -((1926 -(766 + 1143)) + 290))) and (v154==(0 -0))) then local v285=0 + 0 ;while true do if ((v285==(1 + 0)) or (3610==(4245 -(937 + (1207 -525))))) then v154=1 + 0 ;break;end if (((3418 -(472 + 896))<=(5188 -1989)) and (v285==(1830 -(830 + 1000)))) then v155=0;v156=nil;v285=1;end end end end else v86[v88[1119 -(1008 + 109) ]]=v86[v88[278 -(211 + 64) ]][v86[v88[4]]];end elseif ((v89<=(628 -(291 + 316))) or ((6211 -3665)>=4669)) then if ((v89==(24 -(1360 -(162 + 1194)))) or ((4746 -2354)<=(7365 -5338))) then local v160=335 -(19 + 316) ;local v161;local v162;local v163;local v164;local v165;while true do if ((v160==(1 -0)) or ((649 -(324 + 92))>(1444 + 119))) then v163=nil;v164=nil;v160=1 + 1 ;end if ((v160==(0 + 0)) or ((2542 -(1564 + 385))>=(4015 -1913))) then v161=1910 -(1161 + 749) ;v162=nil;v160=1 -0 ;end if ((v160==((7 -4) -1)) or ((5369 -(423 + 156))<=(217 + 209))) then v165=nil;while true do if (((445 -(190 + 91))<=((2153 -1013) -552)) and (v161==(3 -1))) then for v356=v162,v71 do local v357=1371 -(588 + 783) ;local v358;while true do if ((v357==(0 -0)) or (((1145 + 624) -(1081 + (462 -172)))>(6133 -4471))) then v358=0 -0 ;while true do if ((v358==(0 + 0)) or ((4512 -(1627 + 279))<=(7590 -5352))) then v165=v165 + (2 -1) ;v86[v356]=v163[v165];break;end end break;end end end break;end if ((2803>=1226) and (v161==(625 -(57 + 568)))) then local v323=160 -(147 + 13) ;while true do if ((v323==(1 + 0)) or (3897<(442 -249))) then v161=1;break;end if ((v323==(0 + 0)) or ((16434 -12065)<=(3633 -(897 + 442)))) then v162=v88[4 -2 ];v163,v164=v83(v86[v162](v86[v162 + (2 -1) ]));v323=1 + 0 ;end end end if (((1775 -(692 + 561))<(12484 -9284)) and (v161==1)) then v71=(v164 + v162) -1 ;v165=0 + 0 ;v161=1575 -(648 + 925) ;end end break;end end elseif (((1117 + 2058)>(937 + 523)) and (v88[5 -3 ]==v86[v88[1 + 3 ]])) then v70=v70 + (1 -0) ;else v70=v88[11 -8 ];end elseif ((v89==22) or (2956==(2665 -(902 + 580)))) then v86[v88[1116 -(604 + 510) ]][v86[v88[3]]]=v86[v88[(1117 -(722 + 393)) + 2 ]];elseif ((4558>3583) and  not v86[v88[3 -1 ]]) then v70=v70 + (547 -(400 + 146)) ;else v70=v88[10 -(23 -16) ];end elseif ((v89<=27) or ((1560 + 1638)<=(570 -416))) then if ((v89<=25) or ((666 + 2197 + 1201)<285)) then if ((v89==24) or (2916<=(3086 -(788 + (953 -(675 + 177)))))) then if ((v88[6 -4 ]<v86[v88[4]]) or ((752 + 330)>=(2632 -1229))) then v70=v88[10 -(912 -(52 + 853)) ];else v70=v70 + (1709 -(373 + 1335)) ;end elseif ((v86[v88[2 + 0 ]]~=v86[v88[4 -0 ]]) or ((1835 -1062)==3008)) then v70=v70 + (1 -0) ;else v70=v88[5 -2 ];end elseif ((v89==(1757 -(253 + 1478))) or ((3319 -2327)>=(9487 -6244))) then if ((v86[v88[1263 -(440 + 821) ]]<v86[v88[4]]) or ((1736 + 2403)<=1605)) then v70=v70 + 1 ;else v70=v88[8 -5 ];end else v86[v88[2]]=v88[9 -(13 -7) ]~=0 ;end elseif ((892<(4217 -(476 + (1985 -(618 + 964))))) and (v89<=((10 -6) + 25))) then if ((2077<=(2850 + 992)) and (v89==(1 + 27))) then local v169=(0 -0) -0 ;local v170;local v171;local v172;local v173;local v174;while true do if ((973==973) and (v169==(1 + 0))) then v172=nil;v173=nil;v169=(658 -(282 + 371)) -3 ;end if ((v169==2) or ((3595 -1787)<1660)) then v174=nil;while true do if ((v170==(6 -4)) or ((432 -(313 + 110))>=(5453 -(237 + 427 + 609)))) then while true do if ((445==445) and (v171==(1 + 0))) then local v385=0 -0 ;while true do if (((3460 -((3481 -2435) + 719))<(12859 -9615)) and (v385==(1489 -(1437 + 51)))) then v171=1 + 1 ;break;end if ((v385==(0 -(0 + 0))) or ((1819 + 2608)<(341 -115))) then local v426=0 + 0 ;while true do if ((v426==(1895 -(1652 + 242))) or ((2117 -(778 + 1136))>(230 + 1868))) then v385=1 + 0 ;break;end if ((v426==(0 + 0)) or ((6678 -(1139 + 838))<=((535 + 2426) -(533 + 16)))) then v174=v86[v172] + v173 ;v86[v172]=v174;v426=1549 -(1408 + 140) ;end end end end end if (((1259 -((1815 -(1045 + 272)) + 333))<=(6099 -3233)) and (v171==(0 + 0))) then local v386=0 + 0 ;while true do if (((782 -489)==293) and ((0 + 0)==v386)) then v172=v88[1 + 1 ];v173=v86[v172 + (7 -5) ];v386=1 + 0 + 0 ;end if (((2533 -(616 + 855))<=3459) and (v386==(2 -1))) then v171=1;break;end end end if (((5251 -(62 + 54 + 227))>=4206) and (v171==(1 + 1))) then if ((((343 + 290) -302)<=(4153 -(90 + 272))) and (v173>0)) then if ((v174<=v86[v172 + (334 -(50 + 283)) ]) or (1630<=(2538 -(817 + 1107)))) then local v438=0 -0 ;while true do if (((4945 + 1)==(14750 -9804)) and (v438==(0 + 0))) then v70=v88[1 + 2 ];v86[v172 + (3 -0) ]=v174;break;end end end elseif (((13689 -9416)>(3162 -1771)) and (v174>=v86[v172 + (1162 -(443 + 718)) ])) then local v439=0 -0 ;while true do if (((0 -0)==v439) or ((4031 -(471 + 188))<=3342)) then v70=v88[(342 -267) -(14 + 58) ];v86[v172 + 2 + 1 ]=v174;break;end end end break;end end break;end if (((5514 -((778 -(394 + 91)) + 800))>(2925 + 820)) and (v170==(1 -0))) then v173=nil;v174=nil;v170=1 + 1 ;end if ((v170==(1960 -(385 + 1575))) or (4950<(348 + 2676))) then local v324=696 -(535 + 161) ;while true do if (((1690 -(405 + 788))<(2425 + (3346 -(101 + 696)))) and (v324==(2 -1))) then v170=1032 -(939 + 92) ;break;end if ((3336>=(1268 + 615)) and (v324==(385 -(216 + 157 + 12)))) then v171=0;v172=nil;v324=1;end end end end break;end if ((v169==0) or ((11940 -8553)<(2990 -683))) then v170=0;v171=nil;v169=2 -1 ;end end else local v175=952 -(141 + 811) ;local v176;local v177;local v178;while true do if ((v175==(1 + 0)) or ((2098 -691)>=(5163 -(329 + 754)))) then v178=nil;while true do if ((((3731 + 8744) -9086)<=(4498 -(143 + 463))) and (v176==(1514 -(418 + 1095)))) then while true do if ((v177==0) or ((4584 -(47 + 897))==(2666 -1897))) then v178=v88[1948 -((2806 -(1266 + 70)) + 476) ];do return v13(v86,v178,v71);end break;end end break;end if ((v176==(0 + 0)) or ((15219 -10390)<=(986 -(81 + 638)))) then v177=0;v178=nil;v176=1 + 0 ;end end break;end if (((4317 + 607)>(5374 -(761 + 71))) and ((0 -0)==v175)) then v176=0 -0 ;v177=nil;v175=1122 -(555 + 566) ;end end end elseif (((1879 + 1980)>(1466 -(658 + 35))) and (v89<=30)) then v86[v88[5 -3 ]]=v88[1340 -((2387 -(1509 + 142)) + 601) ] + v86[v88[283 -(47 + 232) ]] ;elseif ((v89==(330 -(285 + 8 + 6))) or ((2526 + 524 + 130)==2537)) then do return v86[v88[3 -1 ]];end else local v268=0 + 0 ;local v269;local v270;while true do if ((2474==((3162 -(223 + 261)) -(52 + 152))) and (v268==(1908 -(1194 + 516 + 197)))) then while true do if (((2787 -(922 + 47))<(12020 -(26953 -18803))) and (v269==(0 -0))) then v270=v88[1014 -(107 + 145 + 760) ];do return v13(v86,v270,v270 + v88[11 -8 ] );end break;end end break;end if (((4061 -1638)<=(2041 + 969)) and (v268==(236 -(117 + 119)))) then v269=0 + 0 ;v270=nil;v268=1 + 0 ;end end end elseif (((238 -176)<(18693 -14300)) and (v89<=(226 -177))) then if ((v89<=(1844 -(728 + 293 + 783))) or ((6787 -1999)<409)) then if ((v89<=(7 + 29)) or ((7965 -5948)<=1816)) then if (((3606 -(115 + 406))==3085) and (v89<=(1242 -(82 + 1126)))) then if (((272 + 296)==(1356 -788)) and (v89>33)) then local v180=0 + 0 + 0 ;local v181;local v182;local v183;local v184;while true do if ((311<3255) and (v180==(1 + 0))) then v71=(v183 + v181) -(1675 -(119 + 1555)) ;v184=0 -0 ;v180=4 -2 ;end if (((1 + 0 + 1)==v180) or ((1299 -(24 + 12))>=(657 + 750))) then for v295=v181,v71 do local v296=837 -(228 + 226 + 383) ;while true do if ((v296==(1223 -((2440 -(1672 + 236)) + 691))) or (4742<=(4215 -(107 + 79)))) then v184=v184 + 1 ;v86[v295]=v182[v184];break;end end end break;end if (((14546 -9821)==(2729 + 1996)) and ((0 + 0)==v180)) then local v286=228 -(64 + 164) ;while true do if ((v286==((1935 -(467 + 1467)) + 0)) or ((4693 -3642)<=527)) then v180=1 + 0 ;break;end if ((v286==(0 -0)) or (3369<(2348 -(12 + 882)))) then v181=v88[7 -5 ];v182,v183=v83(v86[v181](v13(v86,v181 + (2 -1) ,v71)));v286=1 + 0 ;end end end end else local v185=0 -0 ;local v186;local v187;local v188;local v189;while true do if ((v185==(3 -1)) or ((11986 -7574)<(584 -344))) then for v297=v186,v71 do local v298=0;local v299;while true do if ((v298==(0 -0)) or (747<(1011 -(593 + 13)))) then v299=0 + 0 ;while true do if ((v299==(0 -0)) or ((5375 -(919 + 217))<(1627 -(716 + 866)))) then v189=v189 + (3 -2) ;v86[v297]=v187[v189];break;end end break;end end end break;end if ((v185==(0 -(0 -0))) or (4260<(2858 -(1138 + 76)))) then local v287=0 -0 ;while true do if ((((114 -(80 + 33)) -0)==v287) or ((6491 -(759 + 1045))<=2353)) then v185=1 + 0 ;break;end if (((0 -0)==v287) or ((4683 -3019)>=(3573 + 1186))) then v186=v88[2 + 0 ];v187,v188=v83(v86[v186](v13(v86,v186 + 1 ,v88[2 + 1 ])));v287=1;end end end if ((v185==(1 + 0)) or (((3766 -(654 + 461)) -1451)>=(3030 -1603))) then local v288=0 + 0 ;while true do if ((v288==0) or ((1146 -(548 + 502))>=(251 + 4006))) then v71=(v188 + v186) -(916 -(327 + 588)) ;v189=0;v288=1 + 0 ;end if (((3925 -2796)==((733 -(320 + 156)) + 872)) and (v288==(3 -(907 -(193 + 712))))) then v185=2;break;end end end end end elseif ((v89>(1952 -(1889 + 28))) or ((2174 -(275 + 453))<(674 -(501 + 43)))) then local v190=229 -(77 + (1736 -(1155 + 429))) ;local v191;local v192;local v193;local v194;local v195;while true do if ((v190==(657 -(545 + 112))) or ((2427 -(111 + 774))>=(2085 + 2170))) then v191=0;v192=nil;v190=1594 -(390 + 1203) ;end if (((3 -1)==v190) or (((653 + 683) -879)>(2527 + 1507))) then v195=nil;while true do if ((v191==1) or (2677==1495)) then local v327=0 + 0 ;while true do if ((((5884 -2827) + 1113)>=(1198 + 126)) and (v327==((1544 -(257 + 48)) -(828 + 410)))) then v191=2 -0 ;break;end if (((1408 + 2313)>((2560 + 2472) -(119 + 1745))) and (v327==((1186 -(490 + 696)) + 0))) then v194=nil;v195=nil;v327=2 -1 ;end end end if (((3628 -((1106 -(767 + 175)) + 241 + 790))<=(2328 + 1841)) and (v191==(0 -(721 -(622 + 99))))) then local v328=0 + 0 ;while true do if (((2 -1)==v328) or (((2131 -(721 + 1222)) + 149)>=4782)) then v191=(3 + 0) -2 ;break;end if ((v328==(208 -(61 + 147))) or ((4553 -(1592 + 134))>(2464 + 471))) then v192=1131 -(1101 + 30) ;v193=nil;v328=1;end end end if (((2 + 0)==v191) or (3531==(2900 -(406 + 84)))) then while true do if (((4206 -2852)==(4697 -3343)) and (v192==(1 + 0))) then v195=v88[3];for v406=1632 -(606 + 1025) ,v195 do v194[v406]=v86[v193 + v406 ];end break;end if (((1285 + 365)<=(1149 + 3770)) and (v192==(0 + 0))) then local v389=(131 -(80 + 51)) -0 ;while true do if ((v389==0) or (1308>(7310 -4675))) then local v429=0 + 0 ;while true do if ((1887==(1645 + 242)) and (0==v429)) then v193=v88[2];v194=v86[v193];v429=425 -(285 + (232 -(20 + 73))) ;end if (((6399 -(2142 + 1362))<(16958 -13487)) and (v429==1)) then v389=1 -0 ;break;end end end if ((v389==(1 + 0)) or (2144<(810 + 1153))) then v192=1 -(0 -0) ;break;end end end end break;end end break;end if (((3233 -(231 + 389))>=((2279 -(122 + 165)) -(647 + 945))) and (v190==(3 -2))) then v193=nil;v194=nil;v190=427 -(351 + 74) ;end end else local v196=1719 -(760 + 959) ;local v197;while true do if (((0 + 0 + 0)==v196) or ((1028 -447)>(4704 -(149 + 350)))) then v197=v88[740 -(399 + 339) ];v86[v197]=v86[v197](v13(v86,v197 + 1 ,v88[(47 -34) -10 ]));break;end end end elseif ((v89<=(1941 -(853 + 1050))) or ((2461 -(1012 + 851))==(1393 -(724 + 225)))) then if ((v89==(142 -105)) or ((3954 + 324 + 42)<=(1377 + 195))) then v37[v88[8 -5 ]]=v86[v88[2 + 0 ]];else v86[v88[1772 -(1500 + 270) ]][v88[3]]=v88[18 -14 ];end elseif ((((5696 -(1132 + 813)) -(621 + 468))>(2638 -(757 + 227))) and (v89>((1149 -(52 + 922)) -136))) then v86[v88[1186 -(194 + 7 + 983) ]]=v86[v88[6 -3 ]] + v86[v88[3 + 1 ]] ;else v86[v88[1 + 1 ]]=v86[v88[1029 -(303 + 723) ]];end elseif ((v89<=44) or (2377>4099)) then if ((v89<=(406 -(363 + 1))) or ((2964 + 879)<=3339)) then if ((4869==(2886 + (3278 -(65 + 1230)))) and (v89>(57 -(40 -24)))) then v86[v88[(1942 -(1238 + 700)) -2 ]]=v88[(5 -1) -1 ];else local v207=0 + 0 ;local v208;local v209;local v210;local v211;while true do if (((5678 -(800 + 710))<(18340 -13960)) and (v207==2)) then while true do if (((4881 -(338 + 29))==(6154 -(555 + 1085))) and (v208==(1 + 0 + 0))) then v211=(0 -0) -0 ;for v361=v209,v88[(2 -1) + 3 ] do local v362=0 -0 ;local v363;local v364;while true do if (((2302 -(1081 + (2316 -1528)))>(188 -134)) and (v362==(1743 -(1591 + 151)))) then while true do if (((4007 -(101 + (920 -260)))>(1535 -751)) and (v363==(0 + 0))) then v364=(2355 -(526 + 395)) -(474 + 960) ;while true do if (((884 -(295 + 56 + 31))==502) and (v364==(0 + 0))) then v211=v211 + (1 -0) ;v86[v361]=v210[v211];break;end end break;end end break;end if ((v362==0) or ((84 + 1837)==(2326 -(74 + 78)))) then v363=859 -(579 + 280) ;v364=nil;v362=1506 -(1281 + 224) ;end end end break;end if ((v208==(0 + 0)) or ((3510 -2539)>((4349 -1076) -2040))) then local v329=163 -(127 + 36) ;while true do if ((v329==0) or ((13448 -8536)<(4399 -(23 + 551)))) then v209=v88[3 -1 ];v210={v86[v209](v13(v86,v209 + 1 + 0 ,v88[1927 -(1635 + (565 -276)) ]))};v329=1538 -(790 + 747) ;end if (((2439 -(1672 + 122))<(1165 -306)) and (v329==(1 + 0))) then v208=1 -0 ;break;end end end end break;end if (((2446 -(248 + 1167))<((17913 -12964) -1572)) and (v207==(0 + 0))) then v208=0 -0 ;v209=nil;v207=1201 -(836 + 364) ;end if ((2734==(1331 + 1403)) and ((1 + 0 + 0)==v207)) then v210=nil;v211=nil;v207=607 -(253 + 352) ;end end end elseif ((v89==43) or ((731 -148)>((490 -(38 + 3)) + 2901))) then v86[v88[2]]=v86[v88[7 -4 ]] * v86[v88[8 -4 ]] ;else local v213=1177 -(205 + 972) ;local v214;local v215;while true do if ((v213==(2 -1)) or ((14937 -11040)<(6992 -3942))) then while true do if ((v214==(0 -0)) or ((5925 -(1508 + 156))<((8612 -5856) -1595))) then v215=v88[8 -6 ];v86[v215](v13(v86,v215 + 1 ,v88[1 + 2 ]));break;end end break;end if (((1468 -((324 -214) + (270 -(143 + 103))))>(1093 -752)) and (v213==0)) then v214=0 -0 ;v215=nil;v213=1928 -(283 + 1644) ;end end end elseif ((v89<=((330 -236) -48)) or ((2697 -635)<(2204 -(154 + 1374)))) then if ((v89>(45 + 0)) or ((11165 -6644)<(1092 + 11))) then v86[v88[3 -1 ]]=v34(v81[v88[4 -1 ]],nil,v37);else local v217=665 -(406 + 259) ;local v218;local v219;local v220;local v221;while true do if (((2470 + 688)>=(1147 + 718)) and (v217==(0 -0))) then v218=0 -(0 -0) ;v219=nil;v217=1;end if ((v217==(942 -(43 + 144 + 754))) or ((7509 -3741)<(1391 + 79))) then v220=nil;v221=nil;v217=2 -0 ;end if ((v217==2) or ((1436 -(158 + 60))>=(241 + 4064))) then while true do if ((v218==(1 + 0)) or ((1330 + 516)<=(770 -(309 + 450)))) then v221=v86[v219 + 2 ];if (((127 + 19)<(5657 -(61 + 927))) and (v221>(1298 -(800 + 498)))) then if ((((3605 -(49 + 41)) -(21 + 1053))>=(871 + 73)) and (v220>v86[v219 + 1 + 0 ])) then v70=v88[5 -2 ];else v86[v219 + (1845 -(1300 + 542)) ]=v220;end elseif ((v220<v86[v219 + 1 + 0 ]) or ((3506 -(18 + (1070 -248)))<=(2226 -(30 + (2295 -(1548 + 398)))))) then v70=v88[2 + 1 ];else v86[v219 + ((1133 + 191) -(280 + 1041)) ]=v220;end break;end if ((v218==(0 -0)) or ((4949 -3559)>1789)) then v219=v88[2 -0 ];v220=v86[v219];v218=1;end end break;end end end elseif ((2960<(5230 -(348 + 691))) and (v89<=((93 -70) + 24))) then v86[v88[2]]=v86[v88[7 -4 ]] -v86[v88[8 -4 ]] ;elseif (((638 + 2600)>(1331 + 471)) and (v89>48)) then for v291=v88[1721 -(548 + 1171) ],v88[2 + 1 ] do v86[v291]=nil;end else local v271=0;local v272;local v273;local v274;while true do if ((v271==2) or ((2379 -1762)>(3510 + 2))) then for v334=1 + 0 ,v88[4] do local v335=0 + 0 ;local v336;local v337;while true do if (((586 + 1859)<=(9617 -4742)) and (v335==1)) then while true do if ((v336==(1 + 0)) or ((14871 -10036)==(3483 -(110 + 297)))) then if (((1984 -(494 + 515))<=(7165 -3161)) and (v337[1 + 0 ]==(135 -96))) then v274[v334-1 ]={v86,v337[3]};else v274[v334-1 ]={v36,v337[1 + 2 ]};end v85[ #v85 + 1 + 0 ]=v274;break;end if ((2505>(873 -(105 + 203))) and (v336==(1298 -((2494 -(455 + 1365)) + 624)))) then local v431=181 -(22 + 159) ;while true do if (((1341 + (3375 -(223 + 158)))>=3992) and (v431==(0 -0))) then v70=v70 + 1 + 0 ;v337=v80[v70];v431=1 + 0 ;end if (((12614 -7694)>=((58 + 2882) -(933 + 88))) and (v431==(1894 -(482 + 1411)))) then v336=1 + 0 ;break;end end end end break;end if (((3246 -1097)==(8222 -6073)) and ((0 + 0)==v335)) then v336=855 -(693 + 162) ;v337=nil;v335=1 + 0 ;end end end v86[v88[2 + (1314 -(173 + 1141)) ]]=v34(v272,v273,v37);break;end if ((((4382 -2611) + 1221)<=(4313 + 301)) and (v271==(1 + 0))) then local v307=674 -(24 + 360 + 290) ;while true do if ((49<(1224 + (3121 -(1215 + 130)))) and (v307==(1105 -(909 + 196)))) then v274={};v273=v10({},{__index=function(v376,v377)local v391=(808 -418) -(225 + 165) ;local v392;while true do if ((v391==(201 -(70 + (241 -110)))) or ((570 + 214)>=(1252 + 385))) then v392=v274[v377];return v392[1 + 0 ][v392[1160 -(183 + 975) ]];end end end,__newindex=function(v376,v377,v378)local v393=1632 -(22 + 933 + (2957 -2280)) ;local v394;local v395;while true do if ((((754 -(105 + 77)) + 3275)==(269 + 3578)) and (v393==(0 + 0))) then local v433=323 -(71 + 252) ;while true do if ((v433==(0 -0)) or (2372>=(3942 + 115))) then v394=0 -0 ;v395=nil;v433=75 -(35 + 39) ;end if ((v433==(166 -(77 + 88))) or ((720 + (1377 -(77 + 7)))<=((624 + 1612) -(229 + 236)))) then v393=1;break;end end end if (((2030 -(668 + 159))==(2906 -1703)) and (v393==(52 -(37 + 14)))) then while true do if (((1446 + 527)==(1005 + 968)) and (v394==(1861 -(354 + 996 + 511)))) then v395=v274[v377];v395[1][v395[(1635 + 113) -(56 + 1690) ]]=v378;break;end end break;end end end});v307=201 -(6 + 194) ;end if ((1==v307) or ((1341 + 1386)<=(213 + 984))) then v271=2;break;end end end if (((5852 -3359)<=2870) and ((0 + (0 -0))==v271)) then local v308=0 -0 ;while true do if (((2548 -(491 + 1336))<=(150 + 22 + 849)) and (v308==(1 -0))) then v271=(1384 -644) -(66 + 673) ;break;end if (((171 + 3215)>((3120 -774) -(510 + 999))) and (v308==((1370 -(11 + 153)) -(587 + 425 + 194)))) then v272=v81[v88[1303 -(335 + 965) ]];v273=nil;v308=1376 -((1009 -778) + 1144) ;end end end end end elseif (((9240 -5201)>(840 + 403)) and (v89<=(1513 -(1369 + 87)))) then if ((v89<=53) or ((2255 -(168 + 58))<(445 + 1042))) then if (((2656 + 1297)>=(461 + 223)) and (v89<=(190 -139))) then if ((v89==((633 -(87 + 361)) -135)) or ((4099 -(386 + 55))<=3522)) then local v223=0 -0 ;local v224;local v225;while true do if ((v223==1) or ((2581 -(291 + 286))<(1926 -(493 + (2581 -1213))))) then while true do if (((1241 + 1441)>=(338 + 453)) and ((0 + 0)==v224)) then v225=v88[390 -(5 + 383) ];v86[v225](v13(v86,v225 + (1 -0) + 0 ,v71));break;end end break;end if ((v223==(0 -0)) or ((6035 -3197)<(2375 -(27 + 19)))) then v224=0;v225=nil;v223=1797 -(733 + 1063) ;end end else local v226=0 -0 ;local v227;local v228;while true do if ((v226==(258 -(58 + 199))) or ((4803 -((359 -(258 + 82)) + (782 -452)))==(4862 -(806 + 2422)))) then while true do if (((803 -558)==245) and (v227==0)) then v228=0 -0 ;while true do if ((v228==(0 -0)) or ((12599 -8158)<=(2001 + 1176))) then v86[v88[1 + 1 ]]=v88[8 -5 ]~=0 ;v70=v70 + (3 -(7 -5)) ;break;end end break;end end break;end if ((((0 + 0) -0)==v226) or ((4910 -(399 + 742))<(4206 -(1534 + 333)))) then v227=733 -(40 + 693) ;v228=nil;v226=1 + 0 + 0 ;end end end elseif (((13609 -10367)>=(854 + 1992)) and (v89==((429 -269) -108))) then local v229=575 -(475 + 100) ;local v230;local v231;local v232;while true do if ((1==v229) or (4480<=1064)) then v232=nil;while true do if ((v230==0) or (1817>(5410 -(90 + 1039)))) then local v339=0 -0 ;while true do if ((v339==(0 + 0 + 0)) or (2439<(784 -492))) then v231=959 -((911 -320) + 368) ;v232=nil;v339=661 -(248 + 412) ;end if (((435 -(42 + 392))==v339) or (((4675 -930) -(124 + 119))<=(2998 -(114 + 370)))) then v230=1 + 0 ;break;end end end if (((5046 -3049)<(1498 + 946)) and (v230==(1 -0))) then while true do if ((v231==0) or ((5858 -(54 + 3635))>=(4310 + 344))) then v232=v88[3 -1 ];v86[v232]=v86[v232](v13(v86,v232 + (1507 -((965 -(352 + 536)) + 1429)) ,v71));break;end end break;end end break;end if ((((537 + 518) -789)<(73 + 1496)) and (v229==(0 -0))) then v230=1483 -(179 + 1304) ;v231=nil;v229=1 + 0 ;end end else v86[v88[134 -(63 + 69) ]]=v86[v88[1 + 2 ]] + v88[3 + 1 ] ;end elseif ((v89<=(12 + 43)) or ((2854 -(46 + 27))==(2939 -(290 + 189 + 9)))) then if ((v89>(175 -121)) or (3432<=(4725 -(1574 + 400)))) then local v234=0 + 0 ;local v235;local v236;local v237;local v238;local v239;while true do if (((8209 -3998)<=(6785 -(157 + 1663))) and (v234==(251 -(74 + 177)))) then local v293=0;while true do if ((v293==(0 + 0)) or ((4029 -(1081 + 400))<(1601 -(185 + 659)))) then v235=v88[(1997 -(1928 + 64)) -3 ];v236=v88[6 -2 ];v293=1 + 0 ;end if ((v293==(1 + 0)) or ((2887 -(189 + 256))>(17306 -12964))) then v234=1 + 0 ;break;end end end if (((1558 -(313 + 1242))==v234) or ((202 + 1)>=(1858 -(596 + 797)))) then if (v239 or (4928<2364)) then local v309=0 -0 ;local v310;local v311;while true do if ((v309==(1886 -(1302 + 584))) or ((305 + 1545)>=(1611 + 2573))) then v310=0 -0 ;v311=nil;v309=4 -3 ;end if ((v309==(3 -2)) or ((813 + 983)<=(365 + 358))) then while true do if ((v310==0) or ((225 + 1648)>(3833 -(1312 + 389)))) then v311=0 + 0 ;while true do if ((v311==(498 -(31 + 467))) or ((1550 -(2056 -1191))>=((13883 -8915) -1618))) then v86[v237]=v239;v70=v88[4 -(917 -(764 + 152)) ];break;end end break;end end break;end end else v70=v70 + (1 -0) ;end break;end if (((2010 -1097)<=((5222 -(348 + 25)) -(243 + 1052))) and (1==v234)) then v237=v235 + 2 + 0 ;v238={v86[v235](v86[v235 + (2 -1) ],v86[v237])};v234=3 -1 ;end if ((v234==(141 -(68 + 71))) or ((1530 + 2522)>(1567 + 2987))) then local v294=0 + 0 ;while true do if (((3042 -725)<((7233 + 4994) -8796)) and (v294==(0 -0))) then for v365=1857 -(908 + 948) ,v236 do v86[v237 + v365 ]=v238[v365];end v239=v238[1 + 0 ];v294=1 -0 ;end if (((2832 -(657 + 894))<(4820 -(177 + 19))) and (v294==((2 -1) + 0))) then v234=12 -9 ;break;end end end end elseif (((6208 -(5821 -1949))==(5967 -3631)) and (v88[2]<v86[v88[(1095 + 519) -(1186 + 424) ]])) then v70=v70 + ((928 -487) -(61 + 379)) ;else v70=v88[713 -(341 + 369) ];end elseif (((437 + 3790)==(18085 -13858)) and (v89==(1338 -(6 + 79 + 1197)))) then v86[v88[1246 -(737 + 507) ]]= #v86[v88[2 + 1 ]];else local v241=(0 -0) + 0 ;local v242;local v243;while true do if (((6213 -(536 + 1279))>=(2942 -1344)) and (v241==(0 + 0))) then v242=1423 -(243 + 1180) ;v243=nil;v241=1 -0 ;end if ((3059>=2486) and (1==v241)) then while true do if (((283 + 27)<=((2492 -(367 + 87)) -1255)) and (v242==(202 -(27 + 175)))) then v243=v88[(1413 -(1354 + 58)) + 1 ];v86[v243]=v86[v243](v86[v243 + ((1961 -(112 + 1846)) -2) ]);break;end end break;end end end elseif ((v89<=(133 -72)) or (793>=(8661 -4275))) then if (((3470 -2046)==(3065 -(896 + 336 + 409))) and (v89<=(268 -209))) then if (((2854 -(365 + 1202))==(207 + 1080)) and (v89==(304 -(70 + 176)))) then v86[v88[2 + 0 ]]=v86[v88[1 + 2 ]]%v86[v88[4]] ;else v86[v88[3 -1 ]]=v37[v88[6 -3 ]];end elseif ((v89>(43 + (355 -(29 + 309)))) or ((6125 -(304 + 1245))==3821)) then v86[v88[5 -3 ]]=v86[v88[8 -5 ]]%v88[(1110 -657) -(264 + (1839 -(856 + 798))) ] ;else local v248=1106 -(623 + 483) ;local v249;local v250;while true do if ((v248==(617 -(351 + 265))) or (1393<((525 + 1218) -596))) then while true do if ((v249==(987 -(478 + 509))) or (4532<2468)) then v250=v88[2];do return v86[v250](v13(v86,v250 + 1 + 0 ,v88[3]));end break;end end break;end if (((18866 -14863)>2970) and (v248==((1116 -(979 + 137)) + 0))) then v249=0 + 0 ;v250=nil;v248=(1084 -(185 + 618)) -(271 + 1 + 8) ;end end end elseif (((1887 + 173 + 505)>=(931 + 1132)) and (v89<=63)) then if (((4362 -1930)>=1135) and (v89==(364 -(295 + 7)))) then local v251=0 + 0 ;local v252;local v253;local v254;local v255;while true do if ((1889<=(3924 -(291 + 76))) and (v251==0)) then v252=1629 -(82 + 1547) ;v253=nil;v251=1886 -(1540 + 345) ;end if ((1741<=3467) and (v251==(1436 -(720 + 715)))) then v254=nil;v255=nil;v251=2;end if ((v251==(83 -(18 + 63))) or ((2862 -(869 + 654))>(3225 -(241 + 9)))) then while true do if (((14335 -10388)>=(1091 -718)) and (1==v252)) then v255=nil;while true do if ((v253==(0 -(0 + 0))) or (4401==(12062 -7068))) then local v399=0 + 0 ;local v400;while true do if ((v399==0) or ((8186 -6443)>=1892)) then v400=0 -0 ;while true do if ((v400==(0 -0)) or ((187 + 1188)>=(4577 -1210))) then v254=v88[2];v255={};v400=2 -1 ;end if (((1108 -(975 + 132))==v400) or (875<(131 + 0))) then v253=1;break;end end break;end end end if (((1894 -(470 + 201))<(4059 + 166)) and (v253==(1099 -(554 + 544)))) then for v413=3 -2 , #v85 do local v414=0;local v415;while true do if (((4315 -(527 + 261))>(900 -621)) and ((0 -0)==v414)) then v415=v85[v413];for v445=1226 -(1001 + 225) , #v415 do local v446=0 + 0 ;local v447;local v448;local v449;while true do if ((0==v446) or ((3280 -1548)>=((5772 + 8778) -9637))) then v447=v415[v445];v448=v447[1 -0 ];v446=1 + 0 ;end if ((4133>69) and (v446==(2 -1))) then v449=v447[2];if (((v448==v86) and (v449>=v254)) or (4952<4315)) then local v469=481 -((654 -(244 + 219)) + 290) ;while true do if ((v469==0) or ((7229 -3044)==(621 + 4097))) then v255[v449]=v448[v449];v447[35 -(32 + 2) ]=v255;break;end end end break;end end end break;end end end break;end end break;end if ((1815==(7087 -5272)) and ((0 + 0 + 0)==v252)) then v253=0;v254=nil;v252=(1 -0) + 0 ;end end break;end end else local v256=0 -0 ;local v257;local v258;local v259;while true do if ((v256==(0 -0)) or ((7032 -2399)<=985)) then v257=0 + 0 ;v258=nil;v256=1 + 0 ;end if ((v256==(617 -(351 + (494 -229)))) or (1548==(3842 + (1419 -(426 + 166))))) then v259=nil;while true do if ((3227<((4077 + 680) -(153 + 988))) and (v257==(0 -0))) then local v346=1825 -(1620 + 205) ;while true do if (((2709 -(213 + 4))==(1214 + 1278)) and (v346==0)) then v258=v88[(1509 -(326 + 1179)) -(2 -1) ];v259=v86[v258];v346=1;end if (((117 + 166)<=(6866 -3027)) and (v346==(2 -1))) then v257=1 -0 ;break;end end end if (((235 + 1514)<=(3385 + 1097)) and (v257==1)) then for v368=v258 + (1184 -(775 + 408)) ,v88[11 -7 ] do v259=v259   .. v86[v368] ;end v86[v88[732 -(718 + 12) ]]=v259;break;end end break;end end end elseif ((v89<=64) or (3443>(161 + 4446))) then if ((v86[v88[3 -1 ]]~=v88[4]) or ((5403 -(508 + 142))<(128 + (1026 -(79 + 406))))) then v70=v70 + (1 -0) ;else v70=v88[4 -1 ];end elseif (((1295 + 205)<2051) and (v89==65)) then local v277=(0 + 0) -(0 -0) ;local v278;local v279;local v280;while true do if ((3609>=(3462 -(383 + 226 + 148))) and (v277==0)) then local v312=0 -0 ;while true do if ((v312==(714 -(286 + 428))) or (4906<=(19 + 286))) then v278=v88[5 -3 ];v279={v86[v278](v13(v86,v278 + (1 -0) ,v71))};v312=(4550 -3109) -(1086 + 354) ;end if ((v312==1) or ((1245 + (4769 -(729 + 733)))<=((59 -43) + 745))) then v277=1 + 0 ;break;end end end if (((624 -(289 + 321))==14) and (v277==1)) then v280=0 + 0 ;for v348=v278,v88[4 + (0 -0) ] do local v349=1090 -((3641 -2624) + 73) ;local v350;local v351;while true do if ((v349==(0 -0)) or ((1986 -1063)==(1940 -1320))) then v350=0 + 0 ;v351=nil;v349=4 -3 ;end if ((v349==(2 -1)) or ((2833 -(480 + 376))==(8640 -5129))) then while true do if ((v350==0) or ((2621 -(83 + 812))>=(3979 + 503 + 90))) then v351=20 -(9 + 11) ;while true do if (((3769 -(191 + 76))==(4318 -(16 + 800))) and (v351==((0 -0) + 0))) then v280=v280 + (3 -2) ;v86[v348]=v279[v280];break;end end break;end end break;end end end break;end end elseif ((v86[v88[3 -1 ]]==v86[v88[3 + 1 ]]) or ((1253 + 177)<=(909 -(597 + 274)))) then v70=v70 + (500 -(287 + 212)) ;else v70=v88[1 + (1443 -(276 + 1165)) ];end v70=v70 + (2 -1) ;break;end if ((v96==0) or (((3302 -(199 + 929)) -((762 -(210 + 381)) + 886))==((12158 -(478 + 1317)) -(3396 + 1985)))) then local v105=0 -0 ;while true do if ((v105==(0 + 0)) or ((4319 + 277 + 157)<(3303 -(807 + 1155)))) then v88=v80[v70];v89=v88[1 + 0 ];v105=1 + 0 + 0 ;end if (((503 -(392 + 96))<(4250 -(1170 + 238))) and ((863 -((1723 -(910 + 371)) + 420))==v105)) then v96=2 -1 ;break;end end end end end end;v69=3;end if (v69==1) then v72={...};v73=v12("#",...) -1 ;v69=2;end end end;end return v34(v33(),{},v17)(...);end vv9(),...);end
